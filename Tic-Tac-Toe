class Game
  attr_accessor :player1, :player2, :move, :answer
  @@board = Array.new(9){|index| index = index + 1}
  @@turn_count = 0
  @@winner = false

  def initialize(player1, player2)
    @player1 = player1
    @player2 = player2
  end 

   def self.classVar
   @@turn_count
   @@winner
   end 

  def board_print
    p @@board[0..2].to_s.gsub('"','')
    p @@board[3..5].to_s.gsub('"','')
    p @@board[6..8].to_s.gsub('"','')
  end 
  
   def move(player)
    @@turn_count += 1
     board_print()
     @move = gets.chomp().to_i
     if @@board[(@move - 1)] != "X" && @@board[(@move - 1)]!= "O"
     @@board[(@move - 1)]= player.marker
     checkwin_condition(player)
     turn()
     else 
      puts "That move is already done, choose another move"
      @@turn_count -= 1
      move(player)
     end 
   end 
 
  def turn 
    while @@winner == false do
      if @@turn_count.even? 
        puts "#{player1.name} it is your turn, choose your position:"
        move(player1)
      elsif
        @@turn_count.odd?
        puts "#{player2.name} it is your turn, choose your position:"
        move(player2)
      end 
    end
  end 

  def checkwin_condition(player)
    if ((@@board[0] == "X" && @@board[1] == "X" && @@board[2] == "X") or
    (@@board[3] == "X" && @@board[4] == "X" && @@board[5] == "X") or
    (@@board[6] == "X" && @@board[7] == "X" && @@board[8] == "X") or
    (@@board[0] == "X" && @@board[4] == "X" && @@board[8] == "X") or
    (@@board[2] == "X" && @@board[4] == "X" && @@board[6] == "X") or
    (@@board[0] == "X" && @@board[3] == "X" && @@board[6] == "X") or
    (@@board[1] == "X" && @@board[4] == "X" && @@board[7] == "X") or
    (@@board[2] == "X" && @@board[5] == "X" && @@board[8] == "X"))
    @@winner=true
    p "#{player.name} You have won"
    board_print()
    restart_game()
    elsif
    @@turn_count == 9
      p "It's a tie"
      p ""
      board_print()
      restart_game()
    end
  end 
   

  def restart_game
  puts "Do you want to play a new game? Y or N?" 
  @answer = gets.chomp().upcase()
  if @answer == "Y"
    @@winner = false
    @@turn_count = 0
    @@board = Array.new(9){|index| index = index + 1}
    turn()
  else 
    p "Ok! Reload if you want to play again" 
    return
  end 
  end
end
 
 
 class Player < Game
   attr_accessor :marker, :name
   def initialize(marker, name)
     @marker = marker
     @name = name
   end
 end 
 
 player1 = Player.new("X", "Player 1")
 player2 = Player.new("O", "Player 2")

 new_game = Game.new(player1,player2)
 new_game.turn()
 